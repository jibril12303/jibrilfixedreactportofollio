{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faisal\\\\Downloads\\\\reactportf (2)\\\\reactportf\\\\reactportf\\\\src\\\\components\\\\inputfield\\\\InputField.js\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef, useImperativeHandle } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputField = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [value, setValue] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    setError(\"\");\n    props.onChange(event.target.name, event.target.value);\n  };\n\n  const validate = () => {\n    //return true if is valid\n    //else return false\n    if (props.validation) {\n      const rules = props.validation.split(\"|\");\n\n      for (let i = 0; i < rules.length; i++) {\n        const current = rules[i];\n\n        if (current === \"required\") {\n          if (!value) {\n            setError(\"Please fill all the required information\");\n            return false;\n          }\n        }\n\n        const pair = current.split(\":\");\n\n        switch (pair[0]) {\n          case \"min\":\n            if (value.length < pair[1]) {\n              setError(`This field must be at least ${pair[1]} charactesr long`);\n              return false;\n            }\n\n            break;\n\n          case \"max\":\n            if (value.length > pair[1]) {\n              setError(`This field must be no longer than ${pair[1]} charactesr long`);\n              return false;\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      validate: () => validate()\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-wrapper\",\n    children: [props.label && /*#__PURE__*/_jsxDEV(\"label\", {\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: props.placeholder,\n      name: props.name,\n      onChange: event => handleChange(event),\n      type: props.type,\n      value: props.value ? props.value : value,\n      autoComplete: props.autoComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}, \"OJ/wBSEjfLEp3Gii/ESXatxjAxw=\")), \"OJ/wBSEjfLEp3Gii/ESXatxjAxw=\");\n\n_c2 = InputField;\nInputField.defaultProps = {\n  placeholder: \"\",\n  name: \"\",\n  type: \"text\",\n  value: \"\",\n  autoComplete: \"off\",\n  validation: \"\"\n};\nexport default InputField;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InputField$forwardRef\");\n$RefreshReg$(_c2, \"InputField\");","map":{"version":3,"sources":["C:/Users/faisal/Downloads/reactportf (2)/reactportf/reactportf/src/components/inputfield/InputField.js"],"names":["React","forwardRef","useImperativeHandle","InputField","props","ref","value","setValue","useState","error","setError","handleChange","event","target","onChange","name","validate","validation","rules","split","i","length","current","pair","label","placeholder","type","autoComplete","defaultProps"],"mappings":"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","sourcesContent":["import React, { forwardRef, useImperativeHandle } from \"react\";\n\nconst InputField = forwardRef((props, ref) => {\n  const [value, setValue] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    setError(\"\");\n    props.onChange(event.target.name, event.target.value);\n  };\n\n  const validate = () => {\n    //return true if is valid\n    //else return false\n\n    if (props.validation) {\n      const rules = props.validation.split(\"|\");\n\n      for (let i = 0; i < rules.length; i++) {\n        const current = rules[i];\n\n        if (current === \"required\") {\n          if (!value) {\n            setError(\"Please fill all the required information\");\n            return false;\n          }\n        }\n\n        const pair = current.split(\":\");\n        switch (pair[0]) {\n          case \"min\":\n            if (value.length < pair[1]) {\n              setError(\n                `This field must be at least ${pair[1]} charactesr long`\n              );\n              return false;\n            }\n            break;\n          case \"max\":\n            if (value.length > pair[1]) {\n              setError(\n                `This field must be no longer than ${pair[1]} charactesr long`\n              );\n              return false;\n            }\n            break;\n          default:\n            break;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      validate: () => validate(),\n    };\n  });\n\n  return (\n    <div className=\"input-wrapper\">\n      {props.label && <label>{props.label}</label>}\n      <input\n        placeholder={props.placeholder}\n        name={props.name}\n        onChange={(event) => handleChange(event)}\n        type={props.type}\n        value={props.value ? props.value : value}\n        autoComplete={props.autoComplete}\n      />\n      {error && <p className=\"error\">{error}</p>}\n    </div>\n  );\n});\n\nInputField.defaultProps = {\n  placeholder: \"\",\n  name: \"\",\n  type: \"text\",\n  value: \"\",\n  autoComplete: \"off\",\n  validation: \"\",\n};\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}